// components/LanguageLoader.qml
import QtQuick 2.15

QtObject {
    id: languageLoader

    // --- Thu·ªôc t√≠nh ---
    property string currentLanguage: "vi"
    property var translations: ({})  // D·ªØ li·ªáu ng√¥n ng·ªØ hi·ªán t·∫°i

    // --- T√≠n hi·ªáu ---
    signal languageChanged(string lang)  // Ph√°t ra khi ƒë·ªïi ng√¥n ng·ªØ

    // --- H√†m t·∫£i ng√¥n ng·ªØ ---
    function loadLanguage() {
        var filePath = Qt.resolvedUrl("../languages/" + currentLanguage + ".json")
        var xhr = new XMLHttpRequest()
        xhr.open("GET", filePath, false)  // ƒë·ªìng b·ªô nh∆∞ ThemeLoader
        xhr.send()

        if (xhr.status === 200) {
            try {
                translations = JSON.parse(xhr.responseText)
            } catch (e) {
                console.warn("[LanguageLoader] JSON parse error:", e)
                translations = getFallbackLanguage()
            }
        } else {
            console.warn("[LanguageLoader] Failed to load:", filePath)
            translations = getFallbackLanguage()
        }

        // üß† Ph√°t t√≠n hi·ªáu sau khi load th√†nh c√¥ng
        languageChanged.emit(currentLanguage)

        return translations
    }

    // --- ƒê·ªïi ng√¥n ng·ªØ ---
    function changeLanguage(newLang) {
        currentLanguage = newLang
        return loadLanguage()
    }

    // --- Ng√¥n ng·ªØ d·ª± ph√≤ng ---
    function getFallbackLanguage() {
        return {
            "settings": {
                "title": "Settings",
                "general": "General",
                "appearance": "Appearance",
                "network": "Network",
                "audio": "Audio",
                "performance": "Performance",
                "shortcuts": "Shortcuts",
                "system": "System"
            }
        }
    }

    // --- H√†m ti·ªán √≠ch l·∫•y chu·ªói d·ªãch ---
    function t(section, key) {
        if (translations[section] && translations[section][key])
            return translations[section][key]
        return key // fallback n·∫øu ch∆∞a d·ªãch
    }

    // --- T·ª± load khi kh·ªüi ƒë·ªông ---
    Component.onCompleted: loadLanguage()
}

