#!/bin/bash

echo "🖥️  THÔNG TIN CHI TIẾT CPU"

# =========================================
# 1. THÔNG TIN PHẦN CỨNG CPU
# =========================================
echo
echo "📋 THÔNG TIN PHẦN CỨNG:"

# CPU Model và architecture
if [ -f /proc/cpuinfo ]; then
  echo "🔹 Model: $(grep "model name" /proc/cpuinfo | head -1 | cut -d':' -f2 | sed 's/^ *//')"
  echo "🔹 Vendor: $(grep "vendor_id" /proc/cpuinfo | head -1 | cut -d':' -f2 | sed 's/^ *//')"
  echo "🔹 Architecture: $(uname -m)"
  echo "🔹 Số sockets: $(lscpu 2>/dev/null | grep "Socket(s):" | awk '{print $2}' || echo "N/A")"
  echo "🔹 Số cores: $(nproc)"
  echo "🔹 Số threads: $(grep -c "processor" /proc/cpuinfo)"
  echo "🔹 CPU MHz: $(grep "cpu MHz" /proc/cpuinfo | head -1 | awk '{print $4}')"
  echo "🔹 Cache L1d: $(lscpu 2>/dev/null | grep "L1d cache" | awk -F':' '{print $2}' | sed 's/^ *//' || echo "N/A")"
  echo "🔹 Cache L2: $(lscpu 2>/dev/null | grep "L2 cache" | awk -F':' '{print $2}' | sed 's/^ *//' || echo "N/A")"
  echo "🔹 Cache L3: $(lscpu 2>/dev/null | grep "L3 cache" | awk -F':' '{print $2}' | sed 's/^ *//' || echo "N/A")"
fi

# =========================================
# 2. SỬ DỤNG CPU THEO THỜI GIAN THỰC
# =========================================
echo
echo "📈 SỬ DỤNG CPU HIỆN TẠI:"

# Lấy thông tin CPU từ /proc/stat
get_cpu_usage() {
  cpu_line=$(grep "^cpu " /proc/stat)
  user=$(echo $cpu_line | awk '{print $2}')
  nice=$(echo $cpu_line | awk '{print $3}')
  system=$(echo $cpu_line | awk '{print $4}')
  idle=$(echo $cpu_line | awk '{print $5}')
  iowait=$(echo $cpu_line | awk '{print $6}')
  irq=$(echo $cpu_line | awk '{print $7}')
  softirq=$(echo $cpu_line | awk '{print $8}')
  steal=$(echo $cpu_line | awk '{print $9}')
  guest=$(echo $cpu_line | awk '{print $10}')

  total=$((user + nice + system + idle + iowait + irq + softirq + steal + guest))
  idle_total=$((idle + iowait))
  usage=$((100 - (idle_total * 100) / total))

  echo "🔹 Tổng usage: ${usage}%"
  echo "🔹 User: $((user * 100 / total))%"
  echo "🔹 System: $((system * 100 / total))%"
  echo "🔹 Idle: $((idle_total * 100 / total))%"
  echo "🔹 I/O Wait: $((iowait * 100 / total))%"
}

get_cpu_usage

# =========================================
# 3. SỬ DỤNG THEO TỪNG CORE
# =========================================
echo
echo "🔢 SỬ DỤNG THEO TỪNG CORE:"

if command -v mpstat &>/dev/null; then
  mpstat -P ALL 1 1 | tail -n +4 | while read line; do
    if [ -n "$line" ]; then
      cpu_num=$(echo $line | awk '{print $2}')
      usage=$(echo $line | awk '{printf "%.1f", 100-$12}')
      if [ "$cpu_num" == "all" ]; then
        echo "🔸 Tất cả cores: ${usage}%"
      else
        echo "🔸 Core $cpu_num: ${usage}%"
      fi
    fi
  done
else
  echo "⚠️  Cài mpstat: sudo apt install sysstat"

  # Fallback: đọc từ /proc/stat
  core_count=$(grep -c "^cpu[0-9]" /proc/stat)
  echo "🔸 Tổng số cores: $core_count"
  for i in $(seq 0 $((core_count - 1))); do
    echo "🔸 Core $i: Đang theo dõi..."
  done
fi

# =========================================
# 4. LOAD AVERAGE VÀ PROCESS
# =========================================
echo
echo "📊 LOAD AVERAGE & PROCESS:"

load_avg=$(uptime | awk -F'load average:' '{print $2}')
echo "🔹 Load Average: $load_avg"

# Giải thích load average
load1=$(echo $load_avg | awk -F',' '{print $1}')
cores=$(nproc)
load_per_core=$(echo "scale=2; $load1 / $cores" | bc)

echo "🔹 Load/Core: $load_per_core"
if (($(echo "$load_per_core < 1.0" | bc -l))); then
  echo "🔹 Trạng thái: ✅ Bình thường"
elif (($(echo "$load_per_core < 2.0" | bc -l))); then
  echo "🔹 Trạng thái: ⚠️  Tải trung bình"
else
  echo "🔹 Trạng thái: 🔴 Tải cao"
fi

# =========================================
# 5. TOP PROCESS SỬ DỤNG CPU
# =========================================
echo
echo "🔥 TOP 10 PROCESS SỬ DỤNG CPU NHIỀU NHẤT:"

printf "%-12s %-8s %-8s %-12s %-s\n" "USER" "PID" "%CPU" "MEMORY" "COMMAND"
ps aux --sort=-%cpu | head -11 | tail -10 | while read user pid cpu mem vsz rss tty stat start time command; do
  if [ "$pid" != "PID" ]; then
    printf "%-12s %-8s %-8s %-12s %-s\n" "$user" "$pid" "$cpu" "${mem}%" "$command"
  fi
done

# =========================================
# 6. CPU FREQUENCY VÀ GOVERNOR
# =========================================
echo
echo "⚡ CPU FREQUENCY:"

if [ -d "/sys/devices/system/cpu/cpu0/cpufreq" ]; then
  for cpu in /sys/devices/system/cpu/cpu[0-9]*/cpufreq; do
    if [ -d "$cpu" ]; then
      cpu_num=$(echo $cpu | grep -o '[0-9]\+' | head -1)
      current_freq=$(cat $cpu/scaling_cur_freq 2>/dev/null)
      max_freq=$(cat $cpu/cpuinfo_max_freq 2>/dev/null)
      governor=$(cat $cpu/scaling_governor 2>/dev/null)

      if [ -n "$current_freq" ]; then
        current_mhz=$((current_freq / 1000))
        max_mhz=$((max_freq / 1000))
        usage_percent=$((current_mhz * 100 / max_mhz))
        echo "🔸 CPU$cpu_num: ${current_mhz}MHz (${usage_percent}% của ${max_mhz}MHz) - $governor"
      fi
    fi
  done
else
  echo "🔸 Không có thông tin frequency (có thể đang chạy trên VM)"
fi

# =========================================
# 7. INTERRUPTS VÀ CONTEXT SWITCHES
# =========================================
echo
echo "🔄 INTERRUPTS & CONTEXT SWITCHES:"

if [ -f /proc/stat ]; then
  interrupts=$(grep "intr" /proc/stat | awk '{print $2}')
  context_switches=$(grep "ctxt" /proc/stat | awk '{print $2}')
  processes=$(grep "processes" /proc/stat | awk '{print $2}')

  echo "🔹 Tổng interrupts: $interrupts"
  echo "🔹 Tổng context switches: $context_switches"
  echo "🔹 Tổng processes created: $processes"
fi

# =========================================
# 8. CPU TEMPERATURE
# =========================================
echo
echo "🌡️  NHIỆT ĐỘ CPU:"

if command -v sensors &>/dev/null; then
  sensors 2>/dev/null | grep -E "(Core|Package|temp)" | grep -v "crit" | while read line; do
    if [[ "$line" == *"Core"* ]] || [[ "$line" == *"Package"* ]]; then
      clean_line=$(echo "$line" | sed 's/+/ /g' | cut -d'(' -f1)
      echo "🔹 $clean_line"
    fi
  done
else
  # Kiểm tra thermal zones
  if [ -d "/sys/class/thermal" ]; then
    for zone in /sys/class/thermal/thermal_zone*/; do
      if [ -f "${zone}temp" ]; then
        temp=$(cat "${zone}temp" 2>/dev/null | awk '{print $1/1000}')
        zone_name=$(cat "${zone}type" 2>/dev/null)
        if [ -n "$temp" ] && [ "$temp" != "0.000" ]; then
          if [[ "$zone_name" == *"pkg"* ]] || [[ "$zone_name" == *"cpu"* ]] || [[ "$zone_name" == *"x86"* ]]; then
            echo "🔹 $zone_name: ${temp}°C"
          fi
        fi
      fi
    done
  fi
fi

# =========================================
# 9. TỔNG KẾT
# =========================================
echo
echo "📋 TỔNG KẾT HỆ THỐNG:"

# Uptime
uptime_info=$(uptime -p)
echo "🔸 Uptime: $uptime_info"

# Current users
users=$(who | wc -l)
echo "🔸 Users đang login: $users"

# Memory usage
mem_total=$(free -h | grep Mem: | awk '{print $2}')
mem_used=$(free -h | grep Mem: | awk '{print $3}')
mem_percent=$(free | grep Mem: | awk '{printf "%.1f", $3/$2 * 100}')
echo "🔸 Memory: $mem_used/$mem_total (${mem_percent}%)"

# Swap usage
swap_used=$(free -h | grep Swap: | awk '{print $3}')
swap_total=$(free -h | grep Swap: | awk '{print $2}')
if [ "$swap_total" != "0B" ]; then
  swap_percent=$(free | grep Swap: | awk '{printf "%.1f", $3/$2 * 100}')
  echo "🔸 Swap: $swap_used/$swap_total (${swap_percent}%)"
fi

echo
echo "✅ Kiểm tra CPU hoàn tất!"
